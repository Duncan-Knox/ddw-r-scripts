.(donor_code,recipient_code,recipient_name,
value,year)]
america_share <- america_share_dt[,.(value=sum(value)),by=donor_code]
america_share <- merge(america_share,america_share_dt,by='donor_code')
rm(america_share_dt)
america_share <- america_share[,.(donor_code,impute_from_code=as.numeric(recipients_codes_impute[2]),share=(value.y/value.x)*100,impute_to_code=recipient_code)]
impute_share <- rbind(africa_share,america_share,asia_share)
rm(africa_share,asia_share,america_share)
imputation <- merge(dac2a[recipient_code %in% recipients_codes_impute & part_code==1 & aid_type_code==240 & data_type=='A' & year==base_year,
.(donor_code,recipient_code,recipient_name,
value,year)],impute_share,by='donor_code',allow.cartesian=T)
imputation <- merge(imputation,dac2a_bilateral_cur,by='donor_code',allow.cartesian = T)
imputation <- imputation[,.(donor_code,impute_to_code,recipient_code=recipient_code.x,aid_type,year=year.x,final_figure=round(value.y+(value.x*(share/100L)),2))]
keep <- c("donor_code","recipient_name","aid_type.x","year.x","value")
disbursement_by_region_bilateral <- merge(dac2a_bilateral_cur,imputation,
by=c('donor_code','recipient_code'),
all.x=T)[,..keep]
setnames(disbursement_by_region_bilateral,c("recipient_name","aid_type.x","year.x"),c("region_name","aid_type","year"))
keep <- c("di_id","donor_code","region_name","aid_type","year","value")
disbursement_by_region_bilateral <- merge(disbursement_by_region_bilateral,
oecd_donor_to_di_id_map,by='donor_code',
all.x=T)[,..keep]
dac2a_dac1_map <- ddw("donor_profile.dac2a_name_to_dac1_name_map")
setnames(dac2a_dac1_map,'code','donor_code')
disbursement_brb_with_dac1_name <- merge(disbursement_by_region_bilateral,dac2a_dac1_map,by="donor_code")
dac_1_ttl_to_region <- disbursement_brb_with_dac1_name[,.(dac_1_total_to_region=sum(value)),by=c('dac_1_name','year','region_name')]
dac_1_ttl_to_world <- disbursement_brb_with_dac1_name[,.(dac_1_total_to_world=sum(value)),by=c('dac_1_name')]
dac_1_name_share_to_region <- merge(dac_1_ttl_to_region,dac_1_ttl_to_world,by='dac_1_name')
dac_1_name_share_to_region$dac_1_share_to_region <- (dac_1_name_share_to_region$dac_1_total_to_region/dac_1_name_share_to_region$dac_1_total_to_world)*100
View(dac_1_name_share_to_region)
View(dac_1_name_share_to_region)
dac_1_multilateral_cur <- dac1[aid_type_code %in% aid_types & part_code==1 & flows==1120 & amount_type_code=='A' & year==2016,
.(donor_code,donor_name,dac_1_name=aid_type_name,
value,year)]
View(dac_1_multilateral_cur)
grep("apple", c("crab apple", "Apple jack", "apple sauce"))
?gsub
head(dac_1_multilateral_cur$dac_1_name)
I.B.1.?.
dac_1_multilateral_cur$dac_1_name <- gsub("I.B.1.?. ",dac_1_multilateral_cur$dac_1_name)
dac_1_multilateral_cur$dac_1_name <- gsub("I.B.1.?. ","",dac_1_multilateral_cur$dac_1_name)
View(dac_1_multilateral_cur)
gsub("I.B.1.?. ","",dac_1_multilateral_cur$dac_1_name)
dac_1_multilateral_cur$dac_1_name <- gsub("I.B.1.?. ","",dac_1_multilateral_cur$dac_1_name,perl=TRUE)
View(dac_1_multilateral_cur)
View(dac_1_multilateral_cur)
gsub("I.B.1.?. ","",dac_1_multilateral_cur$dac_1_name,perl=TRUE)
gsub("B","",dac_1_multilateral_cur$dac_1_name,perl=TRUE)
gsub("I\.B\.1\.?\. ","",dac_1_multilateral_cur$dac_1_name,perl=TRUE)
gsub("I\.B\.1\.?\. ","",dac_1_multilateral_cur$dac_1_name)
gsub("I.B.1.?. ","",dac_1_multilateral_cur$dac_1_name)
gsub("I\\.B\\.1\\.?\\. ","",dac_1_multilateral_cur$dac_1_name)
gsub("I[.]B[.]1[.]?[.] ","",dac_1_multilateral_cur$dac_1_name)
gsub("I[.]{1}B[.]{1}1[.]{1}?[.]{1} ","",dac_1_multilateral_cur$dac_1_name)
gsub("I\\.B\\.1\\.?\\.\\s+","",dac_1_multilateral_cur$dac_1_name)
gsub("I\\.B\\.1\\.?\\.\\s+","",dac_1_multilateral_cur$dac_1_name)
gsub('I.B.1.?1.\s+','',dac_1_multilateral_cur$dac_1_name)
gsub('I.B.1.?1.\\s+','',dac_1_multilateral_cur$dac_1_name)
gsub('I\\.B\\.1\\.?\\.\\s+','',dac_1_multilateral_cur$dac_1_name)
gsub('I\\.','',dac_1_multilateral_cur$dac_1_name)
gsub('(I\\.B\\.1\\.?\\.\\s+)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\.?\\.\\s+)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.?\\.1\\.?\\.\\s+)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\1)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\.)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\.?)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\.\\?)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\.\\d+{1}\\.)','',dac_1_multilateral_cur$dac_1_name)
gsub('^(I\\.B\\.1\\.\\d+{1}\\.\\s+)','',dac_1_multilateral_cur$dac_1_name)
dac_1_multilateral_cur$dac_1_name <- gsub('^(I\\.B\\.1\\.\\d+{1}\\.\\s+)','',dac_1_multilateral_cur$dac_1_name)
View(dac_1_multilateral_cur)
View(dac_1_multilateral_cur)
dac_1_multilateral_cur$dac_1_name <- gsub("I.B.1.?. ","",dac_1_multilateral_cur$dac_1_name,perl=TRUE)
View(dac_1_multilateral_cur)
View(dac_1_multilateral_cur)
gsub('\\(96\\\%\\)','',c('Global Environment Facility (96%)'))
gsub('\\(96\\%\\)','',c('Global Environment Facility (96%)'))
gsub('\\s+\\(96\\%\\)','',c('Global Environment Facility (96%)'))
dac_1_multilateral_cur$dac_1_name <- gsub('\\s+\\(96\\%\\)','',dac_1_multilateral_cur$dac_1_name)
View(dac_1_multilateral_cur)
View(dac_1_multilateral_cur)
?merge
multilateral_imputation <- merge(dac_1_multilateral_cur,dac2a_bilateral_cur,by=NULL)
View(multilateral_imputation)
View(multilateral_imputation)
View(multilateral_imputation)
View(disbursement_by_region_bilateral)
17427/16621
getwd()
rm(list=ls(0))
rm(list=ls())
list.of.packages <- c("data.table", "reshape2")
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
if (length(new.packages))
install.packages(new.packages)
lapply(list.of.packages, require, character.only = T)
# Set base_year here
base_year = 2016
# Load data, removing na strings
data_url = "https://www.imf.org/external/pubs/ft/weo/2018/01/weodata/WEOApr2018all.xls"
weo = read.csv(data_url,
sep = "\t",
na.strings = c("", "n/a", "--"))
View(weo)
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
weo[ WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']
weo <- data.table(weo)
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
weo$indicator = NA
?which
weo$indicator[which(
WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
View(weo)
View(weo)
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
View(weo)
View(weo)
indicators = subset(weo, !is.na(indicator))
View(indicators)
View(indicators)
View(weo)
View(weo)
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[, keep]
indicators = indicators[,..keep]
View(indicators)
View(indicators)
?subset
View(weo)
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
View(weo)
View(weo)
indicators = subset(weo, !is.na(indicator))
View(indicators)
View(indicators)
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
View(indicators)
View(indicators)
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))], gsub, pattern =
",", replacement = ""))
warnings()
View(indicators)
View(indicators)
View(weo)
View(weo)
?sapply
gsub("This is a test,string ",",","")
gsub(c("This is a test,string "),",","")
gsub(c("This is a test,string "),"\,","")
gsub(c("This is a test,string "),"\\,","")
gsub(c("This is a test,string "),"[,]","")
gsub(c("This is a test,string "),'[,]',"")
gsub(c("This is a test,string "),'[,]','')
?gsub
gsub(',','',c("This is a test,string "))
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))], gsub,pattern=',',replacement=''))
warnings(0)
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
indicators[, paste0("X", c(1980:2023))] = sapply(indicators[, paste0("X", c(1980:2023))],as.numeric)
warnings()
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))], gsub,pattern=',',replacement))
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))], gsub,pattern=',',replacement=''))
warnings()
View(indicators)
View(weo)
View(weo)
View(indicators)
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
indicators2 <- indicators
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators2[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators2[, paste0("X", c(1980:2023))], gsub,pattern=',',replacement=''))
View(indicators2)
View(indicators2)
View(indicators)
View(indicators)
View(indicators2)
View(indicators2)
as.numeric(gsub("^([0-9]+),([0-9]+)$","\\1.\\2", c('299,994.90900','394,209,499.04')))
gsub("^([0-9]+),([0-9]+)$","\\1.\\2", c('299,994.90900','394,209,499.04'))
gsub("^([0-9]+),([0-9]+)$","\\1.\\2", c('299,994.90900','394,209,499.04'))
?read.csv2
# Load data, removing na strings
data_url = "https://www.imf.org/external/pubs/ft/weo/2018/01/weodata/WEOApr2018all.xls"
weo = read.csv2(data_url,
sep = "\t",
na.strings = c("", "n/a", "--"))
weo <- data.table(weo)
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
View(indicators)
View(indicators)
weo = read.csv(data_url,
sep = "\t",
na.strings = c("", "n/a", "--"))
weo <- data.table(weo)
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators3 = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators3 = indicators[,..keep]
View(indicators)
View(indicators3)
weo <- data.table(weo)
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators3 = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators3 = indicators3[,..keep]
View(indicators3)
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators3[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators3[, paste0("X", c(1980:2023))], gsub,pattern=',',replacement=''))
View(indicators3)
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators3 = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators3 = indicators3[,..keep]
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators3[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators3[, paste0("X", c(1980:2023))], gsub,pattern=",",replacement=""))
View(indicators3)
View(indicators3)
?read.csv2
weo = read.csv2(data_url,
sep = "\t",
dec = ".",
na.strings = c("", "n/a", "--","NA"))
weo <- data.table(weo)
weo <- data.table(weo)
weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
View(indicators)
?read.csv2
weo = read.csv(data_url,
sep = "\t",
na.strings = c("", "n/a", "--","NA"))
weo <- data.table(weo)
#weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
View(indicators)
View(indicators)
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))], gsub,pattern=",",replacement="",fixed=TRUE))
View(indicators)
View(indicators)
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,..keep]
View(indicators)
View(indicators)
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
# Load data, removing na strings
data_url = "https://www.imf.org/external/pubs/ft/weo/2018/01/weodata/WEOApr2018all.xls"
weo = read.csv(data_url,
sep = "\t",
na.strings = c("", "n/a", "--","NA"))
weo <- data.table(weo)
#weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,keep,with=FALSE]
names(weo)
head(indicators)
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))],
gsub,pattern=",",replacement="",fixed=TRUE))
head(indicators)
gsub(",","",c('293,893,393.00','2.993'))
gsub(",","",c('293,893,393.00','2.993'),fixed=TRUE)
gsub(",","",c('293,893,393.00','2,4994.993'),fixed=TRUE)
gsub(",","",c('293,893,393.00','2,4994.993'),fixed=TRUE)
getwd()
# Change WD to git repo if needed
wd = "/Users/boss/Dev_Musings/devinit/ddw_update/rscripts/ddw-r-scripts"
setwd(wd)
# Set base_year here
base_year = 2016
# Load data, removing na strings
#data_url = "https://www.imf.org/external/pubs/ft/weo/2018/01/weodata/WEOApr2018all.xls"
data_url="WEOApr2018all.xls"
weo = read.csv(data_url,
sep = "\t",
na.strings = c("", "n/a", "--","NA"))
#weo[Country=='Afghanistan' & WEO.Subject.Code=='NGDP_RPCH']$Subject.Notes
# Add a column to pick out indicators that will be useful to us
# Set our desired indicators with nice names
weo$indicator = NA
weo$indicator[which(
weo$WEO.Subject.Code=='NGDPD'
)] = "current_usd_gdp"
weo$indicator[which(
weo$WEO.Subject.Code=='NGDP_RPCH'
)] = "gdp_growth"
# Grab just those indicators and relevant columns
indicators = subset(weo, !is.na(indicator))
keep = c("WEO.Country.Code",
"ISO",
"Country",
"indicator",
paste0("X", c(1980:2023)))
indicators = indicators[,keep]
# Dataset has commas in numbers, which need to be removed and parsed as numbers
indicators[, paste0("X", c(1980:2023))] = as.numeric(sapply(indicators[, paste0("X", c(1980:2023))],
gsub,pattern=",",replacement="",fixed=TRUE))
View(indicators)
View(indicators)
args(View)
args(data.frame)
data.table
?knitr
??knitr
?gbm
help(gbm)
??gbm
??pamr
?library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
?
;
?rpart
??rpart
??cacheSweave
??kernlab
??pamr
??cacheSweave
1817-1695
