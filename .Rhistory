ls
install.packages("akima")
install.packages("boot")
install.packages("car")
install.packages("lme4")
install.packages("meta")
install.packages("mgcv")
install.packages("nlme")
install.packages("deSolve")
install.packages("R2jags")
install.packages("RColorBrewer")
install.packages("RODBC")
install.packages("rpart")
install.packages("spatstat")
install.packages("spdep")
install.packages("tree")
rm(list=ls())
ls()
peas <- c(4,5,3,2,4,5);
class(peas);
ls()
length(peas)
mean(peas)
max(peas)
variance(peas)
sqrt(pease)
sqrt(peas)
sqrt(peas$1)
quantile(peas)
peas = scan()
quantile(peas)
peas(c(3))
peas[c(3)]
beans(4848,4884.3949,3884)
beans <- c(3848,39494,3993)
cor(peas,beans)
y <- 1:24
dim(y) <- (2,4,3)
y <- 1:24
dim(y) <- c(2,4,3)
y
y <- 1:24
dim(y) <- c(2,4,2)
help("read.ftable")
help("read.csv")
myString <- "Hello World"
print(myString)
M = matrix(data = c(a,b,c,d,e,f),nrow = 2,ncol = 3,byrow = FALSE);
print(M);
M <- matrix(data = c(a,b,c,d,e,f),nrow = 2,ncol = 3,byrow = FALSE);
print(M);
M <- matrix(data = c(a,b,c,d,e,f),nrow = 2,ncol = 3,byrow = FALSE);
print(M);
rm(list=ls())
M <- matrix(data = c(a,b,c,d,e,f),nrow = 2,ncol = 3,byrow = FALSE);
print(M);
M <- matrix(data = c(a,b,c,d,e,f),nrow = 2,ncol = 3,byrow = FALSE);
M <- matrix(data = c('a','b','c','d','e','f'),nrow = 2,ncol = 3,byrow = FALSE);
print(M);
# Create an array.
a <- array(c('green','yellow'),dim = c(3,3,4))
print(a)
help("factor")
list.of.packages <- c("readr","dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
wd='/Users/boss/Dev_Musings/devinit/ddw_update/rscripts/ddw-r-scripts'
setwd(wd)
#This file can only be processed after fact table has been processed successfully
source("baseYearConstants.R")
source("connect.R")
#oda <- ddw('fact.oda')
#oda_constant <- ddw('fact.oda_constant')
oda <- read.csv('output/fact.oda')
oda_constant <- read.csv('output/fact.oda_constant')
#oda <- ddw('fact.oda')
#oda_constant <- ddw('fact.oda_constant')
oda <- read.csv('output/fact.oda.csv')
oda_constant <- read.csv('output/fact.oda_constant.csv')
View(oda)
View(oda_constant)
isConstantYearCalculation <- T
excludingNonTransfer <- F
population_total <- ddw('fact.population_total')
oda_sum <- if(isConstantYearCalculation) oda_constant[,.c(sum(value)),by=c('to_di_id','year')] else oda[,.c(sum(value)),by=c('to_di_id','year')]
list.of.packages <- c("data.table","readr","dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
#oda <- ddw('fact.oda')
#oda_constant <- ddw('fact.oda_constant')
oda <- read.csv('output/fact.oda.csv') %>% data.table
oda_constant <- read.csv('output/fact.oda_constant.csv') %>% data.table
population_total <- ddw('fact.population_total') %>% data.table
oda_sum <- if(isConstantYearCalculation) oda_constant[,.c(sum(value)),by=c('to_di_id','year')] else oda[,.c(sum(value)),by=c('to_di_id','year')]
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(sum(value)),by=c('to_di_id','year')] else oda[,.(sum(value)),by=c('to_di_id','year')]
#get sum of oda to each country
oda_sum <- oda_sum[bundle != 'non_transfer',.c(sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
View(oda_sum)
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value)),by=c('to_di_id','year')] else oda[,.(sum(value)),by=c('to_di_id','year')]
#get sum of oda to each country
oda_sum <- oda_sum[bundle != 'non_transfer',.c(sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
View(oda_sum)
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value)),by=c('to_di_id','year')] else oda[,.(sum(value)),by=c('to_di_id','year')]
View(oda_sum)
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value),bundle),by=c('to_di_id','year')] else oda[,.(sum(value)),by=c('to_di_id','year')]
View(oda_sum)
#get sum of oda to each country
oda_sum <- oda_sum[bundle != 'non_transfer',.(sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
View(oda_sum)
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value),bundle),by=c('to_di_id','year')] else oda[,.(sum(value)),by=c('to_di_id','year')]
#ge
oda_sum <- oda_sum[bundle != 'non_transfer',.(value=sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
View(oda_sum)
oda_per_captia <- merge(oda_sum,population_total,by=c('di_id','year'))
View(oda_sum)
View(oda_per_captia)
rm(oda_sum,population_total)
oda_per_captia$per_capita_value <- oda_per_captia$total_oda/oda_per_captia$value %>% round(digits=2)
View(oda_per_captia)
keep <- c('di_id','year','per_capita_value')
oda_per_captia <- oda_per_captia[,keep]
oda_per_captia <- oda_per_captia[,..keep]
setnames(oda_per_captia,'per_capita_value','value')
View(oda_per_captia)
of <- if(isConstantYearCalculation) 'oda_per_capita_excl_non_transfer_constant.csv' else '  oda_per_capita_excl_non_transfer'
write.csv(oda_per_captia,file=paste0(wd,'/output/','recipient_profile',of))
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value)),by=c('to_di_id','year')] else oda[,.(value=sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
#merge the sum calculated with population in order  to calculate per capita values
oda_per_captia <- merge(oda_sum,population_total,by=c('di_id','year'))
rm(oda_sum,population_total)
#This file can only be processed after fact table has been processed successfully
source("baseYearConstants.R")
source("connect.R")
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
#merge the sum calculated with population in order  to calculate per capita values
oda_per_captia <- merge(oda_sum,population_total,by=c('di_id','year'))
rm(oda_sum,population_total)
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value)),by=c('to_di_id','year')] else oda[,.(value=sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
#merge the sum calculated with population in order  to calculate per capita values
oda_per_captia <- merge(oda_sum,population_total,by=c('di_id','year'))
rm(oda_sum,population_total)
population_total <- ddw('fact.population_total') %>% data.table
oda_sum <- if(isConstantYearCalculation) oda_constant[,.(value=sum(value)),by=c('to_di_id','year')] else oda[,.(value=sum(value)),by=c('to_di_id','year')]
setnames(oda_sum,c('to_di_id','value'),c('di_id','total_oda'))
#merge the sum calculated with population in order  to calculate per capita values
oda_per_captia <- merge(oda_sum,population_total,by=c('di_id','year'))
rm(oda_sum,population_total)
View(oda_per_captia)
oda_per_captia$per_capita_value <- oda_per_captia$total_oda/oda_per_captia$value %>% round(digits=2)
keep <- c('di_id','year','per_capita_value')
oda_per_captia <- oda_per_captia[,..keep]
setnames(oda_per_captia,'per_capita_value','value')
of <- if(isConstantYearCalculation) 'oda_per_capita_constant.csv' else 'oda_per_capita.csv'
write.csv(oda_per_captia,file=paste0(wd,'/output/','recipient_profile',of))
